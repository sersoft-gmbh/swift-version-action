name: Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'dist/*.js'
      - '.github/workflows/tests.yml'
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Action
    strategy:
      matrix:
        os: [ macos-12, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.5.1
        if: ${{ runner.os == 'macOS' }}
        with:
          xcode-version: ^14.1
      - name: Install Swift
        if: ${{ runner.os == 'Linux' }}
        uses: sersoft-gmbh/swifty-linux-action@v2.1.1
        with:
          release-version: 5.7
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        if: ${{ github.event_name == 'pull_request' }}
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v3.3.0
      - name: Generate action code
        if: ${{ github.event_name == 'pull_request' }}
        run: npm run deploy
      - uses: sersoft-gmbh/swift-version-action@main
        if: ${{ github.event_name == 'push' }}
        id: swift-version-main
      - uses: './'
        if: ${{ github.event_name == 'pull_request' }}
        id: swift-version-local
      - id: swift-version
        env:
          EVENT_NAME: ${{ github.event_name }}
          BRANCH_VERSION: ${{ steps.swift-version-main.outputs.version }}
          LOCAL_VERSION: ${{ steps.swift-version-local.outputs.version }}
        run: |
          if [ "${EVENT_NAME}" == 'push' ]; then
            echo "version=${BRANCH_VERSION}" >> "${GITHUB_OUTPUT}"
          else
            echo "version=${LOCAL_VERSION}" >> "${GITHUB_OUTPUT}"
          fi
      - name: Check for reported version
        env:
          DETECTED_VERSION: ${{ steps.swift-version.outputs.version }}
        run: swift --version | grep -q "${DETECTED_VERSION}"
